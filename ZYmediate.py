def ZYmediate(x, y, med, nboot=2000, alpha=0.05, kappa=0.05, *args, **kwargs):
    import numpy as np
    import pandas as pd
    from scipy.stats import norm
    
    SEED = False
    xout = False
    ep = 0.00000001
    B = nboot
    
    level = alpha
    Z = pd.concat([x, med, y], axis=1).dropna()
    p = 3
    n = Z.shape[0]
    HT = HuberTun(kappa, p)
    r = HT.r
    tau = HT.tau
    H = robEst(Z, r, tau, ep)
    R_v = H.u2 * tau
    oH = np.argsort(R_v)
    oCaseH = np.arange(1, n+1)[oH]
    oR_v = R_v[oH]
    thetaH = H.theta
    aH = thetaH[0]
    bH = thetaH[1]
    abH = aH * bH
    muH = H.mu
    SigmaH = H.Sigma
    dH = H.d
    
    thetaH = H.theta
    aH = thetaH[0]
    bH = thetaH[1]
    abH = aH * bH
    muH = H.mu
    SigmaH = H.Sigma
    dH = H.d
    
    RH = SErob(Z, muH, SigmaH, thetaH, dH, r, tau)
    Zr = RH.Zr
    SEHI = RH.inf
    SEHS = RH.sand
    ParEstH = np.round(np.column_stack((thetaH, SEHI[:6], SEHS[:6])), 3)
    rnames = np.array(["a", "b", "c", "vx", "vem", "vey"])
    ParEstH = np.column_stack((rnames, ParEstH))
    res = np.transpose(ParEstH)
    
    Res = BCI(Z, Zr, ab=3, abH=abH, B=B, level=level)
    result = {"CI.ab": Res.CI, "p.value": Res.pv, "a.est": aH, "b.est": bH, "ab.est": abH, "alpha": alpha}
    result["call"] = cl
    result = pd.DataFrame(result)
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float})
    result = result.astype({"ab.est": float})
    result = result.astype({"alpha": float})
    result = result.astype({"call": object})
    result = result.astype({"CI.ab": object})
    result = result.astype({"p.value": float})
    result = result.astype({"a.est": float})
    result = result.astype({"b.est": float